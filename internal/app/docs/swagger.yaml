definitions:
  models.AllCourses:
    properties:
      courses:
        items:
          $ref: '#/definitions/models.Course'
        type: array
    type: object
  models.AllEduCenters:
    properties:
      edu_centers:
        items:
          $ref: '#/definitions/models.EduCenter'
        type: array
    type: object
  models.Course:
    properties:
      created_at:
        type: string
      description:
        type: string
      edu_center_id:
        type: string
      id:
        type: string
      name:
        type: string
      rating:
        type: number
      teacher:
        type: string
      updated_at:
        type: string
    type: object
  models.CourseRating:
    properties:
      course_id:
        type: string
      score:
        maximum: 5
        minimum: 0
        type: integer
    type: object
  models.CustomError:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  models.EduAllCentersWithLocation:
    properties:
      educenters:
        items:
          $ref: '#/definitions/models.EduCentersWithLocation'
        type: array
    type: object
  models.EduCenter:
    properties:
      address:
        type: string
      cover_image:
        type: string
      created_at:
        type: string
      html_description:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.Point'
      name:
        type: string
      owner_id:
        type: string
      updated_at:
        type: string
    required:
    - location
    - name
    type: object
  models.EduCenterWithLocation:
    properties:
      distance:
        type: number
      latitude:
        type: number
      limit:
        type: integer
      longtitude:
        type: number
      offset:
        type: integer
    type: object
  models.EduCentersWithLocation:
    properties:
      address:
        type: string
      created_at:
        type: string
      distance:
        type: number
      html_description:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.Point'
      name:
        type: string
      owner_id:
        type: string
      updated_at:
        type: string
    required:
    - location
    - name
    type: object
  models.Empty:
    type: object
  models.LoggingUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Point:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  models.RegUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        maxLength: 16
        minLength: 8
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
paths:
  /api/courses:
    get:
      consumes:
      - application/json
      description: This API for getting all courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AllCourses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: GetAllCourses
      tags:
      - Course
    post:
      consumes:
      - application/json
      description: This API for creating course
      parameters:
      - description: CourseBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: CreateCourse
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: This API for updating Course
      parameters:
      - description: CourseBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: UpdateCourse
      tags:
      - Course
  /api/courses/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting Course
      parameters:
      - description: Course_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: DeleteCourse
      tags:
      - Course
    get:
      consumes:
      - application/json
      description: This API for getting Course
      parameters:
      - description: Course_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: GetCourse
      tags:
      - Course
  /api/courses/rating:
    post:
      consumes:
      - application/json
      description: This API for creating course rating
      parameters:
      - description: Create_Course_Rating
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CourseRating'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourseRating'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Create Course Rating
      tags:
      - Course
  /api/educenters:
    delete:
      consumes:
      - application/json
      description: This API for deleting EduCenter
      parameters:
      - description: EduCenter_ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Delete EduCenter
      tags:
      - EduCenter
    get:
      consumes:
      - application/json
      description: This API for getting EduCenter
      parameters:
      - description: EduCenter_ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EduCenter'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Get Edu Center
      tags:
      - EduCenter
    patch:
      consumes:
      - application/json
      description: This API for updating eduCenter
      parameters:
      - description: EduCenter
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EduCenter'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EduCenter'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Update EduCenter
      tags:
      - EduCenter
    post:
      consumes:
      - application/json
      description: This API for creating Edu Center
      parameters:
      - description: CourseBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EduCenter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EduCenter'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Create Edu Center
      tags:
      - EduCenter
  /api/educenters/location:
    post:
      consumes:
      - application/json
      description: This API for getting educenters by location
      parameters:
      - description: EduCenter_Location
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.EduCenterWithLocation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EduAllCentersWithLocation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Get EduCenter By Location
      tags:
      - EduCenter
  /api/users/:
    post:
      consumes:
      - application/json
      description: This API for creating new user
      parameters:
      - description: User_body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Create User
      tags:
      - user
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting user
      parameters:
      - description: User_ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Delete User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: This API for getting userby ID
      parameters:
      - description: User_ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Get User
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: This API for updating user
      parameters:
      - description: User_ID
        in: path
        name: id
        required: true
        type: string
      - description: User_body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - user
  /auth/login:
    post:
      consumes:
      - application/json
      description: This API for loginning user
      parameters:
      - description: Loggining_User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoggingUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Login User
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: This API for Sign up user
      parameters:
      - description: Register_body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.CustomError'
      summary: Sign Up
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
